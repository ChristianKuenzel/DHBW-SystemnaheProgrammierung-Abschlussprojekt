

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 05 16:15:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4520 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataBANK0
    64  007764                     __pidataBANK0:
    65                           	callstack 0
    66                           
    67                           ;initializer for playMelody@F2541
    68  007764  0105               	dw	261
    69  007766  0149               	dw	329
    70  007768  0188               	dw	392
    71  00776A  01B8               	dw	440
    72  00776C  01ED               	dw	493
    73  00776E  01B8               	dw	440
    74  007770  0188               	dw	392
    75  007772  0149               	dw	329
    76  007774  0105               	dw	261
    77  007776  0149               	dw	329
    78  007778  0188               	dw	392
    79  00777A  01B8               	dw	440
    80  00777C  01D2               	dw	466
    81  00777E  01B8               	dw	440
    82  007780  0188               	dw	392
    83  007782  0149               	dw	329
    84  007784  02BA               	dw	698
    85  007786  0370               	dw	880
    86  007788  0105               	dw	261
    87  00778A  0125               	dw	293
    88  00778C  0137               	dw	311
    89  00778E  0125               	dw	293
    90  007790  0149               	dw	329
    91  007792  0370               	dw	880
    92  007794  0105               	dw	261
    93  007796  0149               	dw	329
    94  007798  0188               	dw	392
    95  00779A  01B8               	dw	440
    96  00779C  01D2               	dw	466
    97  00779E  01B8               	dw	440
    98  0077A0  0188               	dw	392
    99  0077A2  0149               	dw	329
   100  0077A4  0310               	dw	784
   101  0077A6  03DB               	dw	987
   102  0077A8  0125               	dw	293
   103  0077AA  03DB               	dw	987
   104  0077AC  02BA               	dw	698
   105  0077AE  0370               	dw	880
   106  0077B0  0105               	dw	261
   107  0077B2  0370               	dw	880
   108  0077B4  0105               	dw	261
   109  0077B6  0149               	dw	329
   110  0077B8  0188               	dw	392
   111  0077BA  01B8               	dw	440
   112  0077BC  01D2               	dw	466
   113  0077BE  01B8               	dw	440
   114  0077C0  0188               	dw	392
   115  0077C2  0149               	dw	329
   116                           
   117                           	psect	idataBANK2
   118  0077C4                     __pidataBANK2:
   119                           	callstack 0
   120                           
   121                           ;initializer for playMelody@F2539
   122  0077C4  01B8               	dw	440
   123  0077C6  01B8               	dw	440
   124  0077C8  01ED               	dw	493
   125  0077CA  01B8               	dw	440
   126  0077CC  0125               	dw	293
   127  0077CE  0115               	dw	277
   128  0077D0  01B8               	dw	440
   129  0077D2  01B8               	dw	440
   130  0077D4  01ED               	dw	493
   131  0077D6  01B8               	dw	440
   132  0077D8  0149               	dw	329
   133  0077DA  0125               	dw	293
   134  0077DC  01B8               	dw	440
   135  0077DE  01B8               	dw	440
   136  0077E0  01B8               	dw	440
   137  0077E2  0171               	dw	369
   138  0077E4  0125               	dw	293
   139  0077E6  0115               	dw	277
   140  0077E8  01ED               	dw	493
   141  0077EA  0188               	dw	392
   142  0077EC  0188               	dw	392
   143  0077EE  0171               	dw	369
   144  0077F0  0125               	dw	293
   145  0077F2  0149               	dw	329
   146  0077F4  0125               	dw	293
   147  0077F6  01B8               	dw	440
   148  0077F8  01B8               	dw	440
   149  0077FA  01ED               	dw	493
   150  0077FC  01B8               	dw	440
   151  0077FE  0125               	dw	293
   152  007800  0115               	dw	277
   153  007802  01B8               	dw	440
   154  007804  01B8               	dw	440
   155  007806  01ED               	dw	493
   156  007808  01B8               	dw	440
   157  00780A  0149               	dw	329
   158  00780C  0125               	dw	293
   159  00780E  01B8               	dw	440
   160  007810  01B8               	dw	440
   161  007812  01B8               	dw	440
   162  007814  0171               	dw	369
   163  007816  0125               	dw	293
   164  007818  0115               	dw	277
   165  00781A  0125               	dw	293
   166  00781C  0115               	dw	277
   167  00781E  01ED               	dw	493
   168  007820  0188               	dw	392
   169  007822  0188               	dw	392
   170  007824  0171               	dw	369
   171  007826  0125               	dw	293
   172  007828  0149               	dw	329
   173  00782A  0125               	dw	293
   174  0000                     _PORTBbits	set	3969
   175  0000                     _PORTAbits	set	3968
   176  0000                     _TRISCbits	set	3988
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISA	set	3986
   179  0000                     _PORTCbits	set	3970
   180                           
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184  0076B6                     __pcinit:
   185                           	callstack 0
   186  0076B6                     start_initialization:
   187                           	callstack 0
   188  0076B6                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Initialize objects allocated to BANK2 (104 bytes)
   192                           ; load TBLPTR registers with __pidataBANK2
   193  0076B6  0EC4               	movlw	low __pidataBANK2
   194  0076B8  6EF6               	movwf	tblptrl,c
   195  0076BA  0E77               	movlw	high __pidataBANK2
   196  0076BC  6EF7               	movwf	tblptrh,c
   197  0076BE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   198  0076C0  6EF8               	movwf	tblptru,c
   199  0076C2  EE02  F000         	lfsr	0,__pdataBANK2
   200  0076C6  EE10 F068          	lfsr	1,104
   201  0076CA                     copy_data0:
   202  0076CA  0009               	tblrd		*+
   203  0076CC  CFF5 FFEE          	movff	tablat,postinc0
   204  0076D0  50E5               	movf	postdec1,w,c
   205  0076D2  50E1               	movf	fsr1l,w,c
   206  0076D4  E1FA               	bnz	copy_data0
   207                           
   208                           ; Initialize objects allocated to BANK0 (96 bytes)
   209                           ; load TBLPTR registers with __pidataBANK0
   210  0076D6  0E64               	movlw	low __pidataBANK0
   211  0076D8  6EF6               	movwf	tblptrl,c
   212  0076DA  0E77               	movlw	high __pidataBANK0
   213  0076DC  6EF7               	movwf	tblptrh,c
   214  0076DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   215  0076E0  6EF8               	movwf	tblptru,c
   216  0076E2  EE00  F080         	lfsr	0,__pdataBANK0
   217  0076E6  EE10 F060          	lfsr	1,96
   218  0076EA                     copy_data1:
   219  0076EA  0009               	tblrd		*+
   220  0076EC  CFF5 FFEE          	movff	tablat,postinc0
   221  0076F0  50E5               	movf	postdec1,w,c
   222  0076F2  50E1               	movf	fsr1l,w,c
   223  0076F4  E1FA               	bnz	copy_data1
   224                           
   225                           ; Clear objects allocated to COMRAM (4 bytes)
   226  0076F6  6A37               	clrf	(__pbssCOMRAM+3)& (0+255),c
   227  0076F8  6A36               	clrf	(__pbssCOMRAM+2)& (0+255),c
   228  0076FA  6A35               	clrf	(__pbssCOMRAM+1)& (0+255),c
   229  0076FC  6A34               	clrf	__pbssCOMRAM& (0+255),c
   230  0076FE                     end_of_initialization:
   231                           	callstack 0
   232  0076FE                     __end_of__initialization:
   233                           	callstack 0
   234  0076FE  0100               	movlb	0
   235  007700  EF1E  F03F         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238  000034                     __pbssCOMRAM:
   239                           	callstack 0
   240  000034                     _seed:
   241                           	callstack 0
   242  000034                     	ds	4
   243                           
   244                           	psect	dataBANK0
   245  000080                     __pdataBANK0:
   246                           	callstack 0
   247  000080                     playMelody@F2541:
   248                           	callstack 0
   249  000080                     	ds	96
   250                           
   251                           	psect	dataBANK2
   252  000200                     __pdataBANK2:
   253                           	callstack 0
   254  000200                     playMelody@F2539:
   255                           	callstack 0
   256  000200                     	ds	104
   257                           
   258                           	psect	cstackBANK1
   259  000100                     __pcstackBANK1:
   260                           	callstack 0
   261  000100                     playMelody@melody1:
   262                           	callstack 0
   263                           
   264                           ; 104 bytes @ 0x0
   265  000100                     	ds	104
   266  000168                     playMelody@melody2:
   267                           	callstack 0
   268                           
   269                           ; 96 bytes @ 0x68
   270  000168                     	ds	96
   271  0001C8                     playMelody@n:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xC8
   275  0001C8                     	ds	2
   276  0001CA                     playMelody@n_365:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xCA
   280  0001CA                     	ds	2
   281  0001CC                     playMelody@random:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0xCC
   285  0001CC                     	ds	2
   286  0001CE                     playMelody@m:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0xCE
   290  0001CE                     	ds	2
   291  0001D0                     playMelody@m_366:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xD0
   295  0001D0                     	ds	2
   296                           
   297                           	psect	cstackCOMRAM
   298  000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300  000001                     ?___awdiv:
   301                           	callstack 0
   302  000001                     ?___fltol:
   303                           	callstack 0
   304  000001                     delay_ms@time:
   305                           	callstack 0
   306  000001                     ___awdiv@dividend:
   307                           	callstack 0
   308  000001                     ___fltol@f1:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x0
   312  000001                     	ds	2
   313  000003                     ??_delay_ms:
   314  000003                     ___awdiv@divisor:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x2
   318  000003                     	ds	1
   319  000004                     delay_ms@j:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x3
   323  000004                     	ds	1
   324  000005                     ??___fltol:
   325  000005                     ___awdiv@counter:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x4
   329  000005                     	ds	1
   330  000006                     ___awdiv@sign:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x5
   334  000006                     	ds	1
   335  000007                     ___awdiv@quotient:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x6
   339  000007                     	ds	2
   340  000009                     ?___lmul:
   341                           	callstack 0
   342  000009                     ___fltol@sign1:
   343                           	callstack 0
   344  000009                     ___lmul@multiplier:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0x8
   348  000009                     	ds	1
   349  00000A                     ___fltol@exp1:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x9
   353  00000A                     	ds	3
   354  00000D                     ___lmul@multiplicand:
   355                           	callstack 0
   356                           
   357                           ; 4 bytes @ 0xC
   358  00000D                     	ds	4
   359  000011                     ___lmul@product:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x10
   363  000011                     	ds	4
   364  000015                     ?_rand:
   365                           	callstack 0
   366  000015                     ?___xxtofl:
   367                           	callstack 0
   368  000015                     ___xxtofl@val:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x14
   372  000015                     	ds	2
   373  000017                     ??_rand:
   374                           
   375                           ; 1 bytes @ 0x16
   376  000017                     	ds	2
   377  000019                     ??___xxtofl:
   378                           
   379                           ; 1 bytes @ 0x18
   380  000019                     	ds	4
   381  00001D                     ___xxtofl@sign:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x1C
   385  00001D                     	ds	1
   386  00001E                     ___xxtofl@exp:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x1D
   390  00001E                     	ds	1
   391  00001F                     ___xxtofl@arg:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x1E
   395  00001F                     	ds	4
   396  000023                     ?_calculateTime:
   397                           	callstack 0
   398  000023                     calculateTime@note:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x22
   402  000023                     	ds	2
   403  000025                     calculateTime@n:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x24
   407  000025                     	ds	4
   408  000029                     calculateTime@x:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x28
   412  000029                     	ds	2
   413  00002B                     _calculateTime$1018:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x2A
   417  00002B                     	ds	2
   418  00002D                     playTone@note:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2C
   422  00002D                     	ds	2
   423  00002F                     ??_playTone:
   424                           
   425                           ; 1 bytes @ 0x2E
   426  00002F                     	ds	1
   427  000030                     playTone@i:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2F
   431  000030                     	ds	2
   432  000032                     playTone@time:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x31
   436  000032                     	ds	2
   437  000034                     
   438                           ; 1 bytes @ 0x33
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 74 in file "Main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   458 ;;      Params:         0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels required when called: 4
   464 ;; This function calls:
   465 ;;		_playMelody
   466 ;;		_playTone
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text0
   473  007E3C                     __ptext0:
   474                           	callstack 0
   475  007E3C                     _main:
   476                           	callstack 27
   477  007E3C                     
   478                           ;Main.c: 77:     TRISA = 0b11111111;
   479  007E3C  6892               	setf	146,c	;volatile
   480                           
   481                           ;Main.c: 78:     TRISB = 0b11111111;
   482  007E3E  6893               	setf	147,c	;volatile
   483                           
   484                           ;Main.c: 81:     TRISCbits.RC0 = 0;
   485  007E40  9094               	bcf	148,0,c	;volatile
   486  007E42                     l53:
   487                           
   488                           ;Main.c: 85:         __nop();
   489  007E42  F000               	nop	
   490                           
   491                           ;Main.c: 86:         __nop();
   492  007E44  F000               	nop	
   493                           
   494                           ;Main.c: 89:         if(PORTAbits.RA0 == 0){
   495  007E46  B080               	btfsc	128,0,c	;volatile
   496  007E48  EF28  F03F         	goto	u861
   497  007E4C  EF2A  F03F         	goto	u860
   498  007E50                     u861:
   499  007E50  EF30  F03F         	goto	l1237
   500  007E54                     u860:
   501  007E54                     
   502                           ;Main.c: 90:             playTone(261);
   503  007E54  0E01               	movlw	1
   504  007E56  6E2E               	movwf	(playTone@note+1)^0,c
   505  007E58  0E05               	movlw	5
   506  007E5A  6E2D               	movwf	playTone@note^0,c
   507  007E5C  EC82  F03B         	call	_playTone	;wreg free
   508  007E60                     l1237:
   509                           
   510                           ;Main.c: 92:         if(PORTAbits.RA1 == 0){
   511  007E60  B280               	btfsc	128,1,c	;volatile
   512  007E62  EF35  F03F         	goto	u871
   513  007E66  EF37  F03F         	goto	u870
   514  007E6A                     u871:
   515  007E6A  EF3D  F03F         	goto	l1241
   516  007E6E                     u870:
   517  007E6E                     
   518                           ;Main.c: 93:             playTone(277);
   519  007E6E  0E01               	movlw	1
   520  007E70  6E2E               	movwf	(playTone@note+1)^0,c
   521  007E72  0E15               	movlw	21
   522  007E74  6E2D               	movwf	playTone@note^0,c
   523  007E76  EC82  F03B         	call	_playTone	;wreg free
   524  007E7A                     l1241:
   525                           
   526                           ;Main.c: 95:         if(PORTAbits.RA2 == 0){
   527  007E7A  B480               	btfsc	128,2,c	;volatile
   528  007E7C  EF42  F03F         	goto	u881
   529  007E80  EF44  F03F         	goto	u880
   530  007E84                     u881:
   531  007E84  EF4A  F03F         	goto	l1245
   532  007E88                     u880:
   533  007E88                     
   534                           ;Main.c: 96:             playTone(293);
   535  007E88  0E01               	movlw	1
   536  007E8A  6E2E               	movwf	(playTone@note+1)^0,c
   537  007E8C  0E25               	movlw	37
   538  007E8E  6E2D               	movwf	playTone@note^0,c
   539  007E90  EC82  F03B         	call	_playTone	;wreg free
   540  007E94                     l1245:
   541                           
   542                           ;Main.c: 98:         if(PORTAbits.RA3 == 0){
   543  007E94  B680               	btfsc	128,3,c	;volatile
   544  007E96  EF4F  F03F         	goto	u891
   545  007E9A  EF51  F03F         	goto	u890
   546  007E9E                     u891:
   547  007E9E  EF57  F03F         	goto	l1249
   548  007EA2                     u890:
   549  007EA2                     
   550                           ;Main.c: 99:             playTone(311);
   551  007EA2  0E01               	movlw	1
   552  007EA4  6E2E               	movwf	(playTone@note+1)^0,c
   553  007EA6  0E37               	movlw	55
   554  007EA8  6E2D               	movwf	playTone@note^0,c
   555  007EAA  EC82  F03B         	call	_playTone	;wreg free
   556  007EAE                     l1249:
   557                           
   558                           ;Main.c: 101:         if(PORTAbits.RA4 == 0){
   559  007EAE  B880               	btfsc	128,4,c	;volatile
   560  007EB0  EF5C  F03F         	goto	u901
   561  007EB4  EF5E  F03F         	goto	u900
   562  007EB8                     u901:
   563  007EB8  EF64  F03F         	goto	l1253
   564  007EBC                     u900:
   565  007EBC                     
   566                           ;Main.c: 102:             playTone(329);
   567  007EBC  0E01               	movlw	1
   568  007EBE  6E2E               	movwf	(playTone@note+1)^0,c
   569  007EC0  0E49               	movlw	73
   570  007EC2  6E2D               	movwf	playTone@note^0,c
   571  007EC4  EC82  F03B         	call	_playTone	;wreg free
   572  007EC8                     l1253:
   573                           
   574                           ;Main.c: 104:         if(PORTAbits.RA5 == 0){
   575  007EC8  BA80               	btfsc	128,5,c	;volatile
   576  007ECA  EF69  F03F         	goto	u911
   577  007ECE  EF6B  F03F         	goto	u910
   578  007ED2                     u911:
   579  007ED2  EF71  F03F         	goto	l1257
   580  007ED6                     u910:
   581  007ED6                     
   582                           ;Main.c: 105:             playTone(349);
   583  007ED6  0E01               	movlw	1
   584  007ED8  6E2E               	movwf	(playTone@note+1)^0,c
   585  007EDA  0E5D               	movlw	93
   586  007EDC  6E2D               	movwf	playTone@note^0,c
   587  007EDE  EC82  F03B         	call	_playTone	;wreg free
   588  007EE2                     l1257:
   589                           
   590                           ;Main.c: 107:         if(PORTAbits.RA6 == 0){
   591  007EE2  BC80               	btfsc	128,6,c	;volatile
   592  007EE4  EF76  F03F         	goto	u921
   593  007EE8  EF78  F03F         	goto	u920
   594  007EEC                     u921:
   595  007EEC  EF7E  F03F         	goto	l1261
   596  007EF0                     u920:
   597  007EF0                     
   598                           ;Main.c: 108:             playTone(392);
   599  007EF0  0E01               	movlw	1
   600  007EF2  6E2E               	movwf	(playTone@note+1)^0,c
   601  007EF4  0E88               	movlw	136
   602  007EF6  6E2D               	movwf	playTone@note^0,c
   603  007EF8  EC82  F03B         	call	_playTone	;wreg free
   604  007EFC                     l1261:
   605                           
   606                           ;Main.c: 110:         if(PORTAbits.RA7 == 0){
   607  007EFC  BE80               	btfsc	128,7,c	;volatile
   608  007EFE  EF83  F03F         	goto	u931
   609  007F02  EF85  F03F         	goto	u930
   610  007F06                     u931:
   611  007F06  EF8B  F03F         	goto	l1265
   612  007F0A                     u930:
   613  007F0A                     
   614                           ;Main.c: 111:             playTone(440);
   615  007F0A  0E01               	movlw	1
   616  007F0C  6E2E               	movwf	(playTone@note+1)^0,c
   617  007F0E  0EB8               	movlw	184
   618  007F10  6E2D               	movwf	playTone@note^0,c
   619  007F12  EC82  F03B         	call	_playTone	;wreg free
   620  007F16                     l1265:
   621                           
   622                           ;Main.c: 113:         if(PORTBbits.RB0 == 0){
   623  007F16  B081               	btfsc	129,0,c	;volatile
   624  007F18  EF90  F03F         	goto	u941
   625  007F1C  EF92  F03F         	goto	u940
   626  007F20                     u941:
   627  007F20  EF98  F03F         	goto	l1269
   628  007F24                     u940:
   629  007F24                     
   630                           ;Main.c: 114:             playTone(493);
   631  007F24  0E01               	movlw	1
   632  007F26  6E2E               	movwf	(playTone@note+1)^0,c
   633  007F28  0EED               	movlw	237
   634  007F2A  6E2D               	movwf	playTone@note^0,c
   635  007F2C  EC82  F03B         	call	_playTone	;wreg free
   636  007F30                     l1269:
   637                           
   638                           ;Main.c: 116:         if(PORTBbits.RB1 == 0){
   639  007F30  B281               	btfsc	129,1,c	;volatile
   640  007F32  EF9D  F03F         	goto	u951
   641  007F36  EF9F  F03F         	goto	u950
   642  007F3A                     u951:
   643  007F3A  EFA5  F03F         	goto	l1273
   644  007F3E                     u950:
   645  007F3E                     
   646                           ;Main.c: 117:             playTone(523);
   647  007F3E  0E02               	movlw	2
   648  007F40  6E2E               	movwf	(playTone@note+1)^0,c
   649  007F42  0E0B               	movlw	11
   650  007F44  6E2D               	movwf	playTone@note^0,c
   651  007F46  EC82  F03B         	call	_playTone	;wreg free
   652  007F4A                     l1273:
   653                           
   654                           ;Main.c: 119:         if(PORTBbits.RB2 == 0){
   655  007F4A  B481               	btfsc	129,2,c	;volatile
   656  007F4C  EFAA  F03F         	goto	u961
   657  007F50  EFAC  F03F         	goto	u960
   658  007F54                     u961:
   659  007F54  EFB2  F03F         	goto	l1277
   660  007F58                     u960:
   661  007F58                     
   662                           ;Main.c: 120:             playTone(587);
   663  007F58  0E02               	movlw	2
   664  007F5A  6E2E               	movwf	(playTone@note+1)^0,c
   665  007F5C  0E4B               	movlw	75
   666  007F5E  6E2D               	movwf	playTone@note^0,c
   667  007F60  EC82  F03B         	call	_playTone	;wreg free
   668  007F64                     l1277:
   669                           
   670                           ;Main.c: 122:         if(PORTBbits.RB3 == 0){
   671  007F64  B681               	btfsc	129,3,c	;volatile
   672  007F66  EFB7  F03F         	goto	u971
   673  007F6A  EFB9  F03F         	goto	u970
   674  007F6E                     u971:
   675  007F6E  EFBF  F03F         	goto	l1281
   676  007F72                     u970:
   677  007F72                     
   678                           ;Main.c: 123:             playTone(659);
   679  007F72  0E02               	movlw	2
   680  007F74  6E2E               	movwf	(playTone@note+1)^0,c
   681  007F76  0E93               	movlw	147
   682  007F78  6E2D               	movwf	playTone@note^0,c
   683  007F7A  EC82  F03B         	call	_playTone	;wreg free
   684  007F7E                     l1281:
   685                           
   686                           ;Main.c: 125:         if(PORTBbits.RB4 == 0){
   687  007F7E  B881               	btfsc	129,4,c	;volatile
   688  007F80  EFC4  F03F         	goto	u981
   689  007F84  EFC6  F03F         	goto	u980
   690  007F88                     u981:
   691  007F88  EFCC  F03F         	goto	l1285
   692  007F8C                     u980:
   693  007F8C                     
   694                           ;Main.c: 126:             playTone(698);
   695  007F8C  0E02               	movlw	2
   696  007F8E  6E2E               	movwf	(playTone@note+1)^0,c
   697  007F90  0EBA               	movlw	186
   698  007F92  6E2D               	movwf	playTone@note^0,c
   699  007F94  EC82  F03B         	call	_playTone	;wreg free
   700  007F98                     l1285:
   701                           
   702                           ;Main.c: 128:         if(PORTBbits.RB5 == 0){
   703  007F98  BA81               	btfsc	129,5,c	;volatile
   704  007F9A  EFD1  F03F         	goto	u991
   705  007F9E  EFD3  F03F         	goto	u990
   706  007FA2                     u991:
   707  007FA2  EFD9  F03F         	goto	l1289
   708  007FA6                     u990:
   709  007FA6                     
   710                           ;Main.c: 129:             playTone(784);
   711  007FA6  0E03               	movlw	3
   712  007FA8  6E2E               	movwf	(playTone@note+1)^0,c
   713  007FAA  0E10               	movlw	16
   714  007FAC  6E2D               	movwf	playTone@note^0,c
   715  007FAE  EC82  F03B         	call	_playTone	;wreg free
   716  007FB2                     l1289:
   717                           
   718                           ;Main.c: 131:         if(PORTBbits.RB6){
   719  007FB2  AC81               	btfss	129,6,c	;volatile
   720  007FB4  EFDE  F03F         	goto	u1001
   721  007FB8  EFE0  F03F         	goto	u1000
   722  007FBC                     u1001:
   723  007FBC  EFE6  F03F         	goto	l1293
   724  007FC0                     u1000:
   725  007FC0                     
   726                           ;Main.c: 132:             playTone(880);
   727  007FC0  0E03               	movlw	3
   728  007FC2  6E2E               	movwf	(playTone@note+1)^0,c
   729  007FC4  0E70               	movlw	112
   730  007FC6  6E2D               	movwf	playTone@note^0,c
   731  007FC8  EC82  F03B         	call	_playTone	;wreg free
   732  007FCC                     l1293:
   733                           
   734                           ;Main.c: 134:         if(PORTBbits.RB7){
   735  007FCC  AE81               	btfss	129,7,c	;volatile
   736  007FCE  EFEB  F03F         	goto	u1011
   737  007FD2  EFED  F03F         	goto	u1010
   738  007FD6                     u1011:
   739  007FD6  EFF3  F03F         	goto	l1297
   740  007FDA                     u1010:
   741  007FDA                     
   742                           ;Main.c: 135:             playTone(987);
   743  007FDA  0E03               	movlw	3
   744  007FDC  6E2E               	movwf	(playTone@note+1)^0,c
   745  007FDE  0EDB               	movlw	219
   746  007FE0  6E2D               	movwf	playTone@note^0,c
   747  007FE2  EC82  F03B         	call	_playTone	;wreg free
   748  007FE6                     l1297:
   749                           
   750                           ;Main.c: 137:         if(PORTCbits.RC1){
   751  007FE6  A282               	btfss	130,1,c	;volatile
   752  007FE8  EFF8  F03F         	goto	u1021
   753  007FEC  EFFA  F03F         	goto	u1020
   754  007FF0                     u1021:
   755  007FF0  EF21  F03F         	goto	l53
   756  007FF4                     u1020:
   757  007FF4                     
   758                           ;Main.c: 138:             playMelody();
   759  007FF4  ECB7  F03D         	call	_playMelody	;wreg free
   760  007FF8  EF21  F03F         	goto	l53
   761  007FFC  EF00  F000         	goto	start
   762  008000                     __end_of_main:
   763                           	callstack 0
   764                           
   765 ;; *************** function _playMelody *****************
   766 ;; Defined at:
   767 ;;		line 52 in file "Main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  m               2  208[BANK1 ] int 
   772 ;;  m               2  206[BANK1 ] int 
   773 ;;  n               2  202[BANK1 ] unsigned int 
   774 ;;  n               2  200[BANK1 ] unsigned int 
   775 ;;  melody1       104    0[BANK1 ] int [52]
   776 ;;  melody2        96  104[BANK1 ] int [48]
   777 ;;  random          2  204[BANK1 ] int 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   787 ;;      Params:         0       0       0       0       0       0       0
   788 ;;      Locals:         0       0     210       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0
   790 ;;      Totals:         0       0     210       0       0       0       0
   791 ;;Total ram usage:      210 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 3
   794 ;; This function calls:
   795 ;;		_delay_ms
   796 ;;		_playTone
   797 ;;		_rand
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text1
   804  007B6E                     __ptext1:
   805                           	callstack 0
   806  007B6E                     _playMelody:
   807                           	callstack 27
   808  007B6E                     
   809                           ;Main.c: 53:     int random = rand() % 2 + 1;
   810  007B6E  EC4B  F03C         	call	_rand	;wreg free
   811  007B72  0E01               	movlw	1
   812  007B74  1615               	andwf	?_rand^0,f,c
   813  007B76  0E00               	movlw	0
   814  007B78  1616               	andwf	(?_rand+1)^0,f,c
   815  007B7A  0E01               	movlw	1
   816  007B7C  2415               	addwf	?_rand^0,w,c
   817  007B7E  0101               	movlb	1	; () banked
   818  007B80  6FCC               	movwf	playMelody@random& (0+255),b
   819  007B82  0E00               	movlw	0
   820  007B84  2016               	addwfc	(?_rand+1)^0,w,c
   821  007B86  6FCD               	movwf	(playMelody@random+1)& (0+255),b
   822  007B88                     
   823                           ; BSR set to: 1
   824                           ;Main.c: 54:     int melody1[] = {440,440,493,440,293,277,440,440,493,440,329,293,440,44
      +                          0,440,369,293,277,493,392,392,369,293,329,293,440,440,493,440,293,277,440,440,493,440,32
      +                          9,293,440,440,440,369,293,277,293,277,493,392,392,369,293,329,293};
   825  007B88  EE22  F000         	lfsr	2,playMelody@F2539
   826  007B8C  EE11  F000         	lfsr	1,playMelody@melody1
   827  007B90  0E67               	movlw	103
   828  007B92                     u801:
   829  007B92  CFDB FFE3          	movff	plusw2,plusw1
   830  007B96  06E8               	decf	wreg,f,c
   831  007B98  E2FC               	bc	u801
   832  007B9A                     
   833                           ; BSR set to: 1
   834                           ;Main.c: 55:     int melody2[] = {261,329,392,440,493,440,392,329,261,329,392,440,466,44
      +                          0,392,329,698,880,261,293,311,293,329,880,261,329,392,440,466,440,392,329,784,987,293,98
      +                          7,698,880,261,880,261,329,392,440,466,440,392,329};
   835  007B9A  EE20  F080         	lfsr	2,playMelody@F2541
   836  007B9E  EE11  F068         	lfsr	1,playMelody@melody2
   837  007BA2  0E5F               	movlw	95
   838  007BA4                     u811:
   839  007BA4  CFDB FFE3          	movff	plusw2,plusw1
   840  007BA8  06E8               	decf	wreg,f,c
   841  007BAA  E2FC               	bc	u811
   842  007BAC                     
   843                           ; BSR set to: 1
   844                           ;Main.c: 56:     if(random == 1) {
   845  007BAC  05CC               	decf	playMelody@random& (0+255),w,b
   846  007BAE  11CD               	iorwf	(playMelody@random+1)& (0+255),w,b
   847  007BB0  A4D8               	btfss	status,2,c
   848  007BB2  EFDD  F03D         	goto	u821
   849  007BB6  EFDF  F03D         	goto	u820
   850  007BBA                     u821:
   851  007BBA  EF0C  F03E         	goto	l1221
   852  007BBE                     u820:
   853  007BBE                     
   854                           ; BSR set to: 1
   855                           ;Main.c: 57:         size_t n = sizeof(melody1) / sizeof(melody1[0]);
   856  007BBE  0E00               	movlw	0
   857  007BC0  6FC9               	movwf	(playMelody@n+1)& (0+255),b
   858  007BC2  0E34               	movlw	52
   859  007BC4  6FC8               	movwf	playMelody@n& (0+255),b
   860                           
   861                           ;Main.c: 58:         for(int m = 0; m < n; m++) {
   862  007BC6  0E00               	movlw	0
   863  007BC8  6FCF               	movwf	(playMelody@m+1)& (0+255),b
   864  007BCA  0E00               	movlw	0
   865  007BCC  6FCE               	movwf	playMelody@m& (0+255),b
   866  007BCE  EF01  F03E         	goto	l1219
   867  007BD2                     l1213:
   868                           
   869                           ; BSR set to: 1
   870                           ;Main.c: 59:             playTone(melody1[m]);
   871  007BD2  90D8               	bcf	status,0,c
   872  007BD4  35CE               	rlcf	playMelody@m& (0+255),w,b
   873  007BD6  6ED9               	movwf	fsr2l,c
   874  007BD8  35CF               	rlcf	(playMelody@m+1)& (0+255),w,b
   875  007BDA  6EDA               	movwf	fsr2h,c
   876  007BDC  0E00               	movlw	low playMelody@melody1
   877  007BDE  26D9               	addwf	fsr2l,f,c
   878  007BE0  0E01               	movlw	high playMelody@melody1
   879  007BE2  22DA               	addwfc	fsr2h,f,c
   880  007BE4  CFDE F02D          	movff	postinc2,playTone@note
   881  007BE8  CFDD F02E          	movff	postdec2,playTone@note+1
   882  007BEC  EC82  F03B         	call	_playTone	;wreg free
   883  007BF0                     
   884                           ;Main.c: 60:             delay_ms(1000);
   885  007BF0  0E03               	movlw	3
   886  007BF2  6E02               	movwf	(delay_ms@time+1)^0,c
   887  007BF4  0EE8               	movlw	232
   888  007BF6  6E01               	movwf	delay_ms@time^0,c
   889  007BF8  EC3F  F03B         	call	_delay_ms	;wreg free
   890  007BFC                     
   891                           ;Main.c: 61:         }
   892  007BFC  0101               	movlb	1	; () banked
   893  007BFE  4BCE               	infsnz	playMelody@m& (0+255),f,b
   894  007C00  2BCF               	incf	(playMelody@m+1)& (0+255),f,b
   895  007C02                     l1219:
   896                           
   897                           ; BSR set to: 1
   898  007C02  51C8               	movf	playMelody@n& (0+255),w,b
   899  007C04  5DCE               	subwf	playMelody@m& (0+255),w,b
   900  007C06  51C9               	movf	(playMelody@n+1)& (0+255),w,b
   901  007C08  59CF               	subwfb	(playMelody@m+1)& (0+255),w,b
   902  007C0A  A0D8               	btfss	status,0,c
   903  007C0C  EF0A  F03E         	goto	u831
   904  007C10  EF0C  F03E         	goto	u830
   905  007C14                     u831:
   906  007C14  EFE9  F03D         	goto	l1213
   907  007C18                     u830:
   908  007C18                     l1221:
   909                           
   910                           ; BSR set to: 1
   911                           ;Main.c: 63:     if(random == 2) {
   912  007C18  0E02               	movlw	2
   913  007C1A  19CC               	xorwf	playMelody@random& (0+255),w,b
   914  007C1C  11CD               	iorwf	(playMelody@random+1)& (0+255),w,b
   915  007C1E  A4D8               	btfss	status,2,c
   916  007C20  EF14  F03E         	goto	u841
   917  007C24  EF16  F03E         	goto	u840
   918  007C28                     u841:
   919  007C28  EF43  F03E         	goto	l48
   920  007C2C                     u840:
   921  007C2C                     
   922                           ; BSR set to: 1
   923                           ;Main.c: 64:         size_t n = sizeof(melody2) / sizeof(melody2[0]);
   924  007C2C  0E00               	movlw	0
   925  007C2E  6FCB               	movwf	(playMelody@n_365+1)& (0+255),b
   926  007C30  0E30               	movlw	48
   927  007C32  6FCA               	movwf	playMelody@n_365& (0+255),b
   928                           
   929                           ;Main.c: 65:         for(int m = 0; m < n; m++) {
   930  007C34  0E00               	movlw	0
   931  007C36  6FD1               	movwf	(playMelody@m_366+1)& (0+255),b
   932  007C38  0E00               	movlw	0
   933  007C3A  6FD0               	movwf	playMelody@m_366& (0+255),b
   934  007C3C  EF38  F03E         	goto	l1231
   935  007C40                     l1225:
   936                           
   937                           ; BSR set to: 1
   938                           ;Main.c: 66:             playTone(melody2[m]);
   939  007C40  90D8               	bcf	status,0,c
   940  007C42  35D0               	rlcf	playMelody@m_366& (0+255),w,b
   941  007C44  6ED9               	movwf	fsr2l,c
   942  007C46  35D1               	rlcf	(playMelody@m_366+1)& (0+255),w,b
   943  007C48  6EDA               	movwf	fsr2h,c
   944  007C4A  0E68               	movlw	low playMelody@melody2
   945  007C4C  26D9               	addwf	fsr2l,f,c
   946  007C4E  0E01               	movlw	high playMelody@melody2
   947  007C50  22DA               	addwfc	fsr2h,f,c
   948  007C52  CFDE F02D          	movff	postinc2,playTone@note
   949  007C56  CFDD F02E          	movff	postdec2,playTone@note+1
   950  007C5A  EC82  F03B         	call	_playTone	;wreg free
   951  007C5E                     
   952                           ;Main.c: 67:             delay_ms(1000);
   953  007C5E  0E03               	movlw	3
   954  007C60  6E02               	movwf	(delay_ms@time+1)^0,c
   955  007C62  0EE8               	movlw	232
   956  007C64  6E01               	movwf	delay_ms@time^0,c
   957  007C66  EC3F  F03B         	call	_delay_ms	;wreg free
   958  007C6A                     
   959                           ;Main.c: 68:         }
   960  007C6A  0101               	movlb	1	; () banked
   961  007C6C  4BD0               	infsnz	playMelody@m_366& (0+255),f,b
   962  007C6E  2BD1               	incf	(playMelody@m_366+1)& (0+255),f,b
   963  007C70                     l1231:
   964                           
   965                           ; BSR set to: 1
   966  007C70  51CA               	movf	playMelody@n_365& (0+255),w,b
   967  007C72  5DD0               	subwf	playMelody@m_366& (0+255),w,b
   968  007C74  51CB               	movf	(playMelody@n_365+1)& (0+255),w,b
   969  007C76  59D1               	subwfb	(playMelody@m_366+1)& (0+255),w,b
   970  007C78  A0D8               	btfss	status,0,c
   971  007C7A  EF41  F03E         	goto	u851
   972  007C7E  EF43  F03E         	goto	u850
   973  007C82                     u851:
   974  007C82  EF20  F03E         	goto	l1225
   975  007C86                     u850:
   976  007C86                     l48:
   977                           
   978                           ; BSR set to: 1
   979  007C86  0012               	return		;funcret
   980  007C88                     __end_of_playMelody:
   981                           	callstack 0
   982                           
   983 ;; *************** function _rand *****************
   984 ;; Defined at:
   985 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\rand.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2   20[COMRAM] int 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   999 ;;      Params:         2       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0
  1001 ;;      Temps:          4       0       0       0       0       0       0
  1002 ;;      Totals:         6       0       0       0       0       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 1
  1006 ;; This function calls:
  1007 ;;		___lmul
  1008 ;; This function is called by:
  1009 ;;		_playMelody
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text2
  1014  007896                     __ptext2:
  1015                           	callstack 0
  1016  007896                     _rand:
  1017                           	callstack 28
  1018  007896  C034  F009         	movff	_seed,___lmul@multiplier
  1019  00789A  C035  F00A         	movff	_seed+1,___lmul@multiplier+1
  1020  00789E  C036  F00B         	movff	_seed+2,___lmul@multiplier+2
  1021  0078A2  C037  F00C         	movff	_seed+3,___lmul@multiplier+3
  1022  0078A6  0E2D               	movlw	45
  1023  0078A8  6E0D               	movwf	___lmul@multiplicand^0,c
  1024  0078AA  0E7F               	movlw	127
  1025  0078AC  6E0E               	movwf	(___lmul@multiplicand+1)^0,c
  1026  0078AE  0E95               	movlw	149
  1027  0078B0  6E0F               	movwf	(___lmul@multiplicand+2)^0,c
  1028  0078B2  0E4C               	movlw	76
  1029  0078B4  6E10               	movwf	(___lmul@multiplicand+3)^0,c
  1030  0078B6  EC16  F03C         	call	___lmul	;wreg free
  1031  0078BA  0E01               	movlw	1
  1032  0078BC  2409               	addwf	?___lmul^0,w,c
  1033  0078BE  6E34               	movwf	_seed^0,c
  1034  0078C0  0E00               	movlw	0
  1035  0078C2  200A               	addwfc	(?___lmul+1)^0,w,c
  1036  0078C4  6E35               	movwf	(_seed+1)^0,c
  1037  0078C6  0E00               	movlw	0
  1038  0078C8  200B               	addwfc	(?___lmul+2)^0,w,c
  1039  0078CA  6E36               	movwf	(_seed+2)^0,c
  1040  0078CC  0E00               	movlw	0
  1041  0078CE  200C               	addwfc	(?___lmul+3)^0,w,c
  1042  0078D0  6E37               	movwf	(_seed+3)^0,c
  1043  0078D2  C034  F017         	movff	_seed,??_rand
  1044  0078D6  C035  F018         	movff	_seed+1,??_rand+1
  1045  0078DA  C036  F019         	movff	_seed+2,??_rand+2
  1046  0078DE  C037  F01A         	movff	_seed+3,??_rand+3
  1047  0078E2  0E12               	movlw	18
  1048  0078E4  EF79  F03C         	goto	u790
  1049  0078E8                     u795:
  1050  0078E8  90D8               	bcf	status,0,c
  1051  0078EA  321A               	rrcf	(??_rand+3)^0,f,c
  1052  0078EC  3219               	rrcf	(??_rand+2)^0,f,c
  1053  0078EE  3218               	rrcf	(??_rand+1)^0,f,c
  1054  0078F0  3217               	rrcf	??_rand^0,f,c
  1055  0078F2                     u790:
  1056  0078F2  2EE8               	decfsz	wreg,f,c
  1057  0078F4  EF74  F03C         	goto	u795
  1058  0078F8  C017  F015         	movff	??_rand,?_rand
  1059  0078FC  C018  F016         	movff	??_rand+1,?_rand+1
  1060  007900  0012               	return		;funcret
  1061  007902                     __end_of_rand:
  1062                           	callstack 0
  1063                           
  1064 ;; *************** function _playTone *****************
  1065 ;; Defined at:
  1066 ;;		line 40 in file "Main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  note            2   44[COMRAM] int 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  i               2   47[COMRAM] int 
  1071 ;;  time            2   49[COMRAM] int 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         2       0       0       0       0       0       0
  1082 ;;      Locals:         4       0       0       0       0       0       0
  1083 ;;      Temps:          1       0       0       0       0       0       0
  1084 ;;      Totals:         7       0       0       0       0       0       0
  1085 ;;Total ram usage:        7 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 2
  1088 ;; This function calls:
  1089 ;;		_calculateTime
  1090 ;;		_delay_ms
  1091 ;; This function is called by:
  1092 ;;		_playMelody
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text3
  1098  007704                     __ptext3:
  1099                           	callstack 0
  1100  007704                     _playTone:
  1101                           	callstack 28
  1102  007704                     
  1103                           ;Main.c: 42:   int time = calculateTime(note);
  1104  007704  C02D  F023         	movff	playTone@note,calculateTime@note
  1105  007708  C02E  F024         	movff	playTone@note+1,calculateTime@note+1
  1106  00770C  EC81  F03C         	call	_calculateTime	;wreg free
  1107  007710  C023  F032         	movff	?_calculateTime,playTone@time
  1108  007714  C024  F033         	movff	?_calculateTime+1,playTone@time+1
  1109  007718                     
  1110                           ;Main.c: 43:   for(int i=0; i<note; i++)
  1111  007718  0E00               	movlw	0
  1112  00771A  6E31               	movwf	(playTone@i+1)^0,c
  1113  00771C  0E00               	movlw	0
  1114  00771E  6E30               	movwf	playTone@i^0,c
  1115  007720  EFA2  F03B         	goto	l1195
  1116  007724                     l31:
  1117                           
  1118                           ;Main.c: 44:     {;Main.c: 45:         PORTCbits.RC0 = 0;
  1119  007724  9082               	bcf	130,0,c	;volatile
  1120  007726                     
  1121                           ;Main.c: 46:         delay_ms(time);
  1122  007726  C032  F001         	movff	playTone@time,delay_ms@time
  1123  00772A  C033  F002         	movff	playTone@time+1,delay_ms@time+1
  1124  00772E  EC3F  F03B         	call	_delay_ms	;wreg free
  1125  007732                     
  1126                           ;Main.c: 47:         PORTCbits.RC0 = 1;
  1127  007732  8082               	bsf	130,0,c	;volatile
  1128                           
  1129                           ;Main.c: 48:         delay_ms(time);
  1130  007734  C032  F001         	movff	playTone@time,delay_ms@time
  1131  007738  C033  F002         	movff	playTone@time+1,delay_ms@time+1
  1132  00773C  EC3F  F03B         	call	_delay_ms	;wreg free
  1133  007740                     
  1134                           ;Main.c: 49:     }
  1135  007740  4A30               	infsnz	playTone@i^0,f,c
  1136  007742  2A31               	incf	(playTone@i+1)^0,f,c
  1137  007744                     l1195:
  1138  007744  502D               	movf	playTone@note^0,w,c
  1139  007746  5C30               	subwf	playTone@i^0,w,c
  1140  007748  5031               	movf	(playTone@i+1)^0,w,c
  1141  00774A  0A80               	xorlw	128
  1142  00774C  6E2F               	movwf	??_playTone^0,c
  1143  00774E  502E               	movf	(playTone@note+1)^0,w,c
  1144  007750  0A80               	xorlw	128
  1145  007752  582F               	subwfb	??_playTone^0,w,c
  1146  007754  A0D8               	btfss	status,0,c
  1147  007756  EFAF  F03B         	goto	u781
  1148  00775A  EFB1  F03B         	goto	u780
  1149  00775E                     u781:
  1150  00775E  EF92  F03B         	goto	l31
  1151  007762                     u780:
  1152  007762  0012               	return		;funcret
  1153  007764                     __end_of_playTone:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _delay_ms *****************
  1157 ;; Defined at:
  1158 ;;		line 33 in file "Main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  time            2    0[COMRAM] int 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  j               2    3[COMRAM] int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         2       0       0       0       0       0       0
  1173 ;;      Locals:         2       0       0       0       0       0       0
  1174 ;;      Temps:          1       0       0       0       0       0       0
  1175 ;;      Totals:         5       0       0       0       0       0       0
  1176 ;;Total ram usage:        5 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_playTone
  1182 ;;		_playMelody
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text4
  1187  00767E                     __ptext4:
  1188                           	callstack 0
  1189  00767E                     _delay_ms:
  1190                           	callstack 29
  1191  00767E                     
  1192                           ;Main.c: 34:     for(int j=0; j<time; j++) {
  1193  00767E  0E00               	movlw	0
  1194  007680  6E05               	movwf	(delay_ms@j+1)^0,c
  1195  007682  0E00               	movlw	0
  1196  007684  6E04               	movwf	delay_ms@j^0,c
  1197  007686  EF4B  F03B         	goto	l24
  1198  00768A                     l1181:
  1199                           
  1200                           ;Main.c: 35:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1201  00768A  0EC8               	movlw	200
  1202  00768C                     u1037:
  1203  00768C  D000               	nop2	
  1204  00768E  2EE8               	decfsz	wreg,f,c
  1205  007690  D7FD               	bra	u1037
  1206  007692                     
  1207                           ;Main.c: 36:     }
  1208  007692  4A04               	infsnz	delay_ms@j^0,f,c
  1209  007694  2A05               	incf	(delay_ms@j+1)^0,f,c
  1210  007696                     l24:
  1211  007696  5001               	movf	delay_ms@time^0,w,c
  1212  007698  5C04               	subwf	delay_ms@j^0,w,c
  1213  00769A  5005               	movf	(delay_ms@j+1)^0,w,c
  1214  00769C  0A80               	xorlw	128
  1215  00769E  6E03               	movwf	??_delay_ms^0,c
  1216  0076A0  5002               	movf	(delay_ms@time+1)^0,w,c
  1217  0076A2  0A80               	xorlw	128
  1218  0076A4  5803               	subwfb	??_delay_ms^0,w,c
  1219  0076A6  A0D8               	btfss	status,0,c
  1220  0076A8  EF58  F03B         	goto	u771
  1221  0076AC  EF5A  F03B         	goto	u770
  1222  0076B0                     u771:
  1223  0076B0  EF45  F03B         	goto	l1181
  1224  0076B4                     u770:
  1225  0076B4  0012               	return		;funcret
  1226  0076B6                     __end_of_delay_ms:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _calculateTime *****************
  1230 ;; Defined at:
  1231 ;;		line 20 in file "Main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  note            2   34[COMRAM] int 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  n               4   36[COMRAM] float 
  1236 ;;  x               2   40[COMRAM] int 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  2   34[COMRAM] int 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1246 ;;      Params:         2       0       0       0       0       0       0
  1247 ;;      Locals:         8       0       0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0
  1249 ;;      Totals:        10       0       0       0       0       0       0
  1250 ;;Total ram usage:       10 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 1
  1253 ;; This function calls:
  1254 ;;		___awdiv
  1255 ;;		___fltol
  1256 ;;		___lmul
  1257 ;;		___xxtofl
  1258 ;; This function is called by:
  1259 ;;		_playTone
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text5
  1264  007902                     __ptext5:
  1265                           	callstack 0
  1266  007902                     _calculateTime:
  1267                           	callstack 28
  1268  007902                     
  1269                           ;Main.c: 22:     float n;;Main.c: 23:     n = ((1/note)/2)*1000000;
  1270  007902  C023  F003         	movff	calculateTime@note,___awdiv@divisor
  1271  007906  C024  F004         	movff	calculateTime@note+1,___awdiv@divisor+1
  1272  00790A  0E00               	movlw	0
  1273  00790C  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1274  00790E  0E01               	movlw	1
  1275  007910  6E01               	movwf	___awdiv@dividend^0,c
  1276  007912  ECD2  F03C         	call	___awdiv	;wreg free
  1277  007916  C001  F02B         	movff	?___awdiv,_calculateTime$1018
  1278  00791A  C002  F02C         	movff	?___awdiv+1,_calculateTime$1018+1
  1279                           
  1280                           ;Main.c: 22:     float n;;Main.c: 23:     n = ((1/note)/2)*1000000;
  1281  00791E  0E00               	movlw	0
  1282  007920  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1283  007922  0E02               	movlw	2
  1284  007924  6E03               	movwf	___awdiv@divisor^0,c
  1285  007926  C02B  F001         	movff	_calculateTime$1018,___awdiv@dividend
  1286  00792A  C02C  F002         	movff	_calculateTime$1018+1,___awdiv@dividend+1
  1287  00792E  ECD2  F03C         	call	___awdiv	;wreg free
  1288  007932  C001  F009         	movff	?___awdiv,___lmul@multiplier
  1289  007936  C002  F00A         	movff	?___awdiv+1,___lmul@multiplier+1
  1290  00793A  0E00               	movlw	0
  1291  00793C  BE0A               	btfsc	(___lmul@multiplier+1)^0,7,c
  1292  00793E  0EFF               	movlw	-1
  1293  007940  6E0B               	movwf	(___lmul@multiplier+2)^0,c
  1294  007942  6E0C               	movwf	(___lmul@multiplier+3)^0,c
  1295  007944  0E40               	movlw	64
  1296  007946  6E0D               	movwf	___lmul@multiplicand^0,c
  1297  007948  0E42               	movlw	66
  1298  00794A  6E0E               	movwf	(___lmul@multiplicand+1)^0,c
  1299  00794C  0E0F               	movlw	15
  1300  00794E  6E0F               	movwf	(___lmul@multiplicand+2)^0,c
  1301  007950  0E00               	movlw	0
  1302  007952  6E10               	movwf	(___lmul@multiplicand+3)^0,c
  1303  007954  EC16  F03C         	call	___lmul	;wreg free
  1304  007958  C009  F015         	movff	?___lmul,___xxtofl@val
  1305  00795C  C00A  F016         	movff	?___lmul+1,___xxtofl@val+1
  1306  007960  C00B  F017         	movff	?___lmul+2,___xxtofl@val+2
  1307  007964  C00C  F018         	movff	?___lmul+3,___xxtofl@val+3
  1308  007968  0E01               	movlw	1
  1309  00796A  EC44  F03E         	call	___xxtofl
  1310  00796E  C015  F025         	movff	?___xxtofl,calculateTime@n
  1311  007972  C016  F026         	movff	?___xxtofl+1,calculateTime@n+1
  1312  007976  C017  F027         	movff	?___xxtofl+2,calculateTime@n+2
  1313  00797A  C018  F028         	movff	?___xxtofl+3,calculateTime@n+3
  1314                           
  1315                           ;Main.c: 26:     int x;;Main.c: 27:     x = (int)n;
  1316  00797E  C025  F001         	movff	calculateTime@n,___fltol@f1
  1317  007982  C026  F002         	movff	calculateTime@n+1,___fltol@f1+1
  1318  007986  C027  F003         	movff	calculateTime@n+2,___fltol@f1+2
  1319  00798A  C028  F004         	movff	calculateTime@n+3,___fltol@f1+3
  1320  00798E  EC34  F03D         	call	___fltol	;wreg free
  1321  007992  C001  F029         	movff	?___fltol,calculateTime@x
  1322  007996  C002  F02A         	movff	?___fltol+1,calculateTime@x+1
  1323  00799A                     
  1324                           ;Main.c: 28:     return x;
  1325  00799A  C029  F023         	movff	calculateTime@x,?_calculateTime
  1326  00799E  C02A  F024         	movff	calculateTime@x+1,?_calculateTime+1
  1327  0079A2  0012               	return		;funcret
  1328  0079A4                     __end_of_calculateTime:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function ___xxtofl *****************
  1332 ;; Defined at:
  1333 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  sign            1    wreg     unsigned char 
  1336 ;;  val             4   20[COMRAM] long 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  sign            1   28[COMRAM] unsigned char 
  1339 ;;  arg             4   30[COMRAM] unsigned long 
  1340 ;;  exp             1   29[COMRAM] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  4   20[COMRAM] unsigned char 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         4       0       0       0       0       0       0
  1351 ;;      Locals:         6       0       0       0       0       0       0
  1352 ;;      Temps:          4       0       0       0       0       0       0
  1353 ;;      Totals:        14       0       0       0       0       0       0
  1354 ;;Total ram usage:       14 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_calculateTime
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text6
  1364  007C88                     __ptext6:
  1365                           	callstack 0
  1366  007C88                     ___xxtofl:
  1367                           	callstack 28
  1368                           
  1369                           ;incstack = 0
  1370                           ;___xxtofl@sign stored from wreg
  1371  007C88  6E1D               	movwf	___xxtofl@sign^0,c
  1372  007C8A  501D               	movf	___xxtofl@sign^0,w,c
  1373  007C8C  B4D8               	btfsc	status,2,c
  1374  007C8E  EF4B  F03E         	goto	u671
  1375  007C92  EF4D  F03E         	goto	u670
  1376  007C96                     u671:
  1377  007C96  EF6F  F03E         	goto	l731
  1378  007C9A                     u670:
  1379  007C9A  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  1380  007C9C  EF54  F03E         	goto	u680
  1381  007CA0  EF52  F03E         	goto	u681
  1382  007CA4                     u681:
  1383  007CA4  EF6F  F03E         	goto	l731
  1384  007CA8                     u680:
  1385  007CA8  C015  F019         	movff	___xxtofl@val,??___xxtofl
  1386  007CAC  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  1387  007CB0  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  1388  007CB4  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  1389  007CB8  1E19               	comf	??___xxtofl^0,f,c
  1390  007CBA  1E1A               	comf	(??___xxtofl+1)^0,f,c
  1391  007CBC  1E1B               	comf	(??___xxtofl+2)^0,f,c
  1392  007CBE  1E1C               	comf	(??___xxtofl+3)^0,f,c
  1393  007CC0  2A19               	incf	??___xxtofl^0,f,c
  1394  007CC2  0E00               	movlw	0
  1395  007CC4  221A               	addwfc	(??___xxtofl+1)^0,f,c
  1396  007CC6  221B               	addwfc	(??___xxtofl+2)^0,f,c
  1397  007CC8  221C               	addwfc	(??___xxtofl+3)^0,f,c
  1398  007CCA  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  1399  007CCE  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  1400  007CD2  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  1401  007CD6  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  1402  007CDA  EF77  F03E         	goto	l1133
  1403  007CDE                     l731:
  1404  007CDE  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  1405  007CE2  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1406  007CE6  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1407  007CEA  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1408  007CEE                     l1133:
  1409  007CEE  5015               	movf	___xxtofl@val^0,w,c
  1410  007CF0  1016               	iorwf	(___xxtofl@val+1)^0,w,c
  1411  007CF2  1017               	iorwf	(___xxtofl@val+2)^0,w,c
  1412  007CF4  1018               	iorwf	(___xxtofl@val+3)^0,w,c
  1413  007CF6  A4D8               	btfss	status,2,c
  1414  007CF8  EF80  F03E         	goto	u691
  1415  007CFC  EF82  F03E         	goto	u690
  1416  007D00                     u691:
  1417  007D00  EF8C  F03E         	goto	l1139
  1418  007D04                     u690:
  1419  007D04  0E00               	movlw	0
  1420  007D06  6E15               	movwf	?___xxtofl^0,c
  1421  007D08  0E00               	movlw	0
  1422  007D0A  6E16               	movwf	(?___xxtofl+1)^0,c
  1423  007D0C  0E00               	movlw	0
  1424  007D0E  6E17               	movwf	(?___xxtofl+2)^0,c
  1425  007D10  0E00               	movlw	0
  1426  007D12  6E18               	movwf	(?___xxtofl+3)^0,c
  1427  007D14  EF1D  F03F         	goto	l734
  1428  007D18                     l1139:
  1429  007D18  0E96               	movlw	150
  1430  007D1A  6E1E               	movwf	___xxtofl@exp^0,c
  1431  007D1C  EF96  F03E         	goto	l1143
  1432  007D20                     l1141:
  1433  007D20  2A1E               	incf	___xxtofl@exp^0,f,c
  1434  007D22  90D8               	bcf	status,0,c
  1435  007D24  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  1436  007D26  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  1437  007D28  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  1438  007D2A  321F               	rrcf	___xxtofl@arg^0,f,c
  1439  007D2C                     l1143:
  1440  007D2C  0E00               	movlw	0
  1441  007D2E  141F               	andwf	___xxtofl@arg^0,w,c
  1442  007D30  6E19               	movwf	??___xxtofl^0,c
  1443  007D32  0E00               	movlw	0
  1444  007D34  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  1445  007D36  6E1A               	movwf	(??___xxtofl+1)^0,c
  1446  007D38  0E00               	movlw	0
  1447  007D3A  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  1448  007D3C  6E1B               	movwf	(??___xxtofl+2)^0,c
  1449  007D3E  0EFE               	movlw	254
  1450  007D40  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  1451  007D42  6E1C               	movwf	(??___xxtofl+3)^0,c
  1452  007D44  5019               	movf	??___xxtofl^0,w,c
  1453  007D46  101A               	iorwf	(??___xxtofl+1)^0,w,c
  1454  007D48  101B               	iorwf	(??___xxtofl+2)^0,w,c
  1455  007D4A  101C               	iorwf	(??___xxtofl+3)^0,w,c
  1456  007D4C  A4D8               	btfss	status,2,c
  1457  007D4E  EFAB  F03E         	goto	u701
  1458  007D52  EFAD  F03E         	goto	u700
  1459  007D56                     u701:
  1460  007D56  EF90  F03E         	goto	l1141
  1461  007D5A                     u700:
  1462  007D5A  EFBB  F03E         	goto	l738
  1463  007D5E                     l1145:
  1464  007D5E  2A1E               	incf	___xxtofl@exp^0,f,c
  1465  007D60  0E01               	movlw	1
  1466  007D62  261F               	addwf	___xxtofl@arg^0,f,c
  1467  007D64  0E00               	movlw	0
  1468  007D66  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
  1469  007D68  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
  1470  007D6A  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
  1471  007D6C  90D8               	bcf	status,0,c
  1472  007D6E  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  1473  007D70  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  1474  007D72  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  1475  007D74  321F               	rrcf	___xxtofl@arg^0,f,c
  1476  007D76                     l738:
  1477  007D76  0E00               	movlw	0
  1478  007D78  141F               	andwf	___xxtofl@arg^0,w,c
  1479  007D7A  6E19               	movwf	??___xxtofl^0,c
  1480  007D7C  0E00               	movlw	0
  1481  007D7E  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  1482  007D80  6E1A               	movwf	(??___xxtofl+1)^0,c
  1483  007D82  0E00               	movlw	0
  1484  007D84  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  1485  007D86  6E1B               	movwf	(??___xxtofl+2)^0,c
  1486  007D88  0EFF               	movlw	255
  1487  007D8A  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  1488  007D8C  6E1C               	movwf	(??___xxtofl+3)^0,c
  1489  007D8E  5019               	movf	??___xxtofl^0,w,c
  1490  007D90  101A               	iorwf	(??___xxtofl+1)^0,w,c
  1491  007D92  101B               	iorwf	(??___xxtofl+2)^0,w,c
  1492  007D94  101C               	iorwf	(??___xxtofl+3)^0,w,c
  1493  007D96  A4D8               	btfss	status,2,c
  1494  007D98  EFD0  F03E         	goto	u711
  1495  007D9C  EFD2  F03E         	goto	u710
  1496  007DA0                     u711:
  1497  007DA0  EFAF  F03E         	goto	l1145
  1498  007DA4                     u710:
  1499  007DA4  EFDA  F03E         	goto	l1153
  1500  007DA8                     l1151:
  1501  007DA8  061E               	decf	___xxtofl@exp^0,f,c
  1502  007DAA  90D8               	bcf	status,0,c
  1503  007DAC  361F               	rlcf	___xxtofl@arg^0,f,c
  1504  007DAE  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
  1505  007DB0  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
  1506  007DB2  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
  1507  007DB4                     l1153:
  1508  007DB4  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
  1509  007DB6  EFDF  F03E         	goto	u721
  1510  007DBA  EFE1  F03E         	goto	u720
  1511  007DBE                     u721:
  1512  007DBE  EFE9  F03E         	goto	l745
  1513  007DC2                     u720:
  1514  007DC2  0E02               	movlw	2
  1515  007DC4  601E               	cpfslt	___xxtofl@exp^0,c
  1516  007DC6  EFE7  F03E         	goto	u731
  1517  007DCA  EFE9  F03E         	goto	u730
  1518  007DCE                     u731:
  1519  007DCE  EFD4  F03E         	goto	l1151
  1520  007DD2                     u730:
  1521  007DD2                     l745:
  1522  007DD2  B01E               	btfsc	___xxtofl@exp^0,0,c
  1523  007DD4  EFEE  F03E         	goto	u741
  1524  007DD8  EFF0  F03E         	goto	u740
  1525  007DDC                     u741:
  1526  007DDC  EFF1  F03E         	goto	l1159
  1527  007DE0                     u740:
  1528  007DE0  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
  1529  007DE2                     l1159:
  1530  007DE2  90D8               	bcf	status,0,c
  1531  007DE4  321E               	rrcf	___xxtofl@exp^0,f,c
  1532  007DE6  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  1533  007DEA  6A1A               	clrf	(??___xxtofl+1)^0,c
  1534  007DEC  6A1B               	clrf	(??___xxtofl+2)^0,c
  1535  007DEE  6A1C               	clrf	(??___xxtofl+3)^0,c
  1536  007DF0  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  1537  007DF4  6A1B               	clrf	(??___xxtofl+2)^0,c
  1538  007DF6  6A1A               	clrf	(??___xxtofl+1)^0,c
  1539  007DF8  6A19               	clrf	??___xxtofl^0,c
  1540  007DFA  5019               	movf	??___xxtofl^0,w,c
  1541  007DFC  121F               	iorwf	___xxtofl@arg^0,f,c
  1542  007DFE  501A               	movf	(??___xxtofl+1)^0,w,c
  1543  007E00  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
  1544  007E02  501B               	movf	(??___xxtofl+2)^0,w,c
  1545  007E04  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
  1546  007E06  501C               	movf	(??___xxtofl+3)^0,w,c
  1547  007E08  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
  1548  007E0A  501D               	movf	___xxtofl@sign^0,w,c
  1549  007E0C  B4D8               	btfsc	status,2,c
  1550  007E0E  EF0B  F03F         	goto	u751
  1551  007E12  EF0D  F03F         	goto	u750
  1552  007E16                     u751:
  1553  007E16  EF15  F03F         	goto	l1169
  1554  007E1A                     u750:
  1555  007E1A  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  1556  007E1C  EF14  F03F         	goto	u760
  1557  007E20  EF12  F03F         	goto	u761
  1558  007E24                     u761:
  1559  007E24  EF15  F03F         	goto	l1169
  1560  007E28                     u760:
  1561  007E28  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
  1562  007E2A                     l1169:
  1563  007E2A  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  1564  007E2E  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  1565  007E32  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  1566  007E36  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  1567  007E3A                     l734:
  1568  007E3A  0012               	return		;funcret
  1569  007E3C                     __end_of___xxtofl:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function ___lmul *****************
  1573 ;; Defined at:
  1574 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  multiplier      4    8[COMRAM] unsigned long 
  1577 ;;  multiplicand    4   12[COMRAM] unsigned long 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  product         4   16[COMRAM] unsigned long 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  4    8[COMRAM] unsigned long 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1589 ;;      Params:         8       0       0       0       0       0       0
  1590 ;;      Locals:         4       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0
  1592 ;;      Totals:        12       0       0       0       0       0       0
  1593 ;;Total ram usage:       12 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_calculateTime
  1599 ;;		_rand
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text7
  1604  00782C                     __ptext7:
  1605                           	callstack 0
  1606  00782C                     ___lmul:
  1607                           	callstack 28
  1608  00782C  0E00               	movlw	0
  1609  00782E  6E11               	movwf	___lmul@product^0,c
  1610  007830  0E00               	movlw	0
  1611  007832  6E12               	movwf	(___lmul@product+1)^0,c
  1612  007834  0E00               	movlw	0
  1613  007836  6E13               	movwf	(___lmul@product+2)^0,c
  1614  007838  0E00               	movlw	0
  1615  00783A  6E14               	movwf	(___lmul@product+3)^0,c
  1616  00783C                     l1031:
  1617  00783C  A009               	btfss	___lmul@multiplier^0,0,c
  1618  00783E  EF23  F03C         	goto	u521
  1619  007842  EF25  F03C         	goto	u520
  1620  007846                     u521:
  1621  007846  EF2D  F03C         	goto	l1035
  1622  00784A                     u520:
  1623  00784A  500D               	movf	___lmul@multiplicand^0,w,c
  1624  00784C  2611               	addwf	___lmul@product^0,f,c
  1625  00784E  500E               	movf	(___lmul@multiplicand+1)^0,w,c
  1626  007850  2212               	addwfc	(___lmul@product+1)^0,f,c
  1627  007852  500F               	movf	(___lmul@multiplicand+2)^0,w,c
  1628  007854  2213               	addwfc	(___lmul@product+2)^0,f,c
  1629  007856  5010               	movf	(___lmul@multiplicand+3)^0,w,c
  1630  007858  2214               	addwfc	(___lmul@product+3)^0,f,c
  1631  00785A                     l1035:
  1632  00785A  90D8               	bcf	status,0,c
  1633  00785C  360D               	rlcf	___lmul@multiplicand^0,f,c
  1634  00785E  360E               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1635  007860  360F               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1636  007862  3610               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1637  007864  90D8               	bcf	status,0,c
  1638  007866  320C               	rrcf	(___lmul@multiplier+3)^0,f,c
  1639  007868  320B               	rrcf	(___lmul@multiplier+2)^0,f,c
  1640  00786A  320A               	rrcf	(___lmul@multiplier+1)^0,f,c
  1641  00786C  3209               	rrcf	___lmul@multiplier^0,f,c
  1642  00786E  5009               	movf	___lmul@multiplier^0,w,c
  1643  007870  100A               	iorwf	(___lmul@multiplier+1)^0,w,c
  1644  007872  100B               	iorwf	(___lmul@multiplier+2)^0,w,c
  1645  007874  100C               	iorwf	(___lmul@multiplier+3)^0,w,c
  1646  007876  A4D8               	btfss	status,2,c
  1647  007878  EF40  F03C         	goto	u531
  1648  00787C  EF42  F03C         	goto	u530
  1649  007880                     u531:
  1650  007880  EF1E  F03C         	goto	l1031
  1651  007884                     u530:
  1652  007884  C011  F009         	movff	___lmul@product,?___lmul
  1653  007888  C012  F00A         	movff	___lmul@product+1,?___lmul+1
  1654  00788C  C013  F00B         	movff	___lmul@product+2,?___lmul+2
  1655  007890  C014  F00C         	movff	___lmul@product+3,?___lmul+3
  1656  007894  0012               	return		;funcret
  1657  007896                     __end_of___lmul:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function ___fltol *****************
  1661 ;; Defined at:
  1662 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  f1              4    0[COMRAM] unsigned long 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  exp1            1    9[COMRAM] unsigned char 
  1667 ;;  sign1           1    8[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  4    0[COMRAM] long 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         4       0       0       0       0       0       0
  1678 ;;      Locals:         2       0       0       0       0       0       0
  1679 ;;      Temps:          4       0       0       0       0       0       0
  1680 ;;      Totals:        10       0       0       0       0       0       0
  1681 ;;Total ram usage:       10 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_calculateTime
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text8
  1691  007A68                     __ptext8:
  1692                           	callstack 0
  1693  007A68                     ___fltol:
  1694                           	callstack 28
  1695  007A68  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1696  007A6A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1697  007A6C  6E0A               	movwf	___fltol@exp1^0,c
  1698  007A6E  500A               	movf	___fltol@exp1^0,w,c
  1699  007A70  A4D8               	btfss	status,2,c
  1700  007A72  EF3D  F03D         	goto	u601
  1701  007A76  EF3F  F03D         	goto	u600
  1702  007A7A                     u601:
  1703  007A7A  EF49  F03D         	goto	l1089
  1704  007A7E                     u600:
  1705  007A7E                     l1085:
  1706  007A7E  0E00               	movlw	0
  1707  007A80  6E01               	movwf	?___fltol^0,c
  1708  007A82  0E00               	movlw	0
  1709  007A84  6E02               	movwf	(?___fltol+1)^0,c
  1710  007A86  0E00               	movlw	0
  1711  007A88  6E03               	movwf	(?___fltol+2)^0,c
  1712  007A8A  0E00               	movlw	0
  1713  007A8C  6E04               	movwf	(?___fltol+3)^0,c
  1714  007A8E  EFB6  F03D         	goto	l373
  1715  007A92                     l1089:
  1716  007A92  C001  F005         	movff	___fltol@f1,??___fltol
  1717  007A96  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1718  007A9A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1719  007A9E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1720  007AA2  0E20               	movlw	32
  1721  007AA4  EF59  F03D         	goto	u610
  1722  007AA8                     u615:
  1723  007AA8  90D8               	bcf	status,0,c
  1724  007AAA  3208               	rrcf	(??___fltol+3)^0,f,c
  1725  007AAC  3207               	rrcf	(??___fltol+2)^0,f,c
  1726  007AAE  3206               	rrcf	(??___fltol+1)^0,f,c
  1727  007AB0  3205               	rrcf	??___fltol^0,f,c
  1728  007AB2                     u610:
  1729  007AB2  2EE8               	decfsz	wreg,f,c
  1730  007AB4  EF54  F03D         	goto	u615
  1731  007AB8  5005               	movf	??___fltol^0,w,c
  1732  007ABA  6E09               	movwf	___fltol@sign1^0,c
  1733  007ABC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1734  007ABE  0EFF               	movlw	255
  1735  007AC0  1601               	andwf	___fltol@f1^0,f,c
  1736  007AC2  0EFF               	movlw	255
  1737  007AC4  1602               	andwf	(___fltol@f1+1)^0,f,c
  1738  007AC6  0EFF               	movlw	255
  1739  007AC8  1603               	andwf	(___fltol@f1+2)^0,f,c
  1740  007ACA  0E00               	movlw	0
  1741  007ACC  1604               	andwf	(___fltol@f1+3)^0,f,c
  1742  007ACE  0E96               	movlw	150
  1743  007AD0  5E0A               	subwf	___fltol@exp1^0,f,c
  1744  007AD2  BE0A               	btfsc	___fltol@exp1^0,7,c
  1745  007AD4  EF70  F03D         	goto	u620
  1746  007AD8  EF6E  F03D         	goto	u621
  1747  007ADC                     u621:
  1748  007ADC  EF86  F03D         	goto	l1109
  1749  007AE0                     u620:
  1750  007AE0  500A               	movf	___fltol@exp1^0,w,c
  1751  007AE2  0A80               	xorlw	128
  1752  007AE4  0F97               	addlw	151
  1753  007AE6  B0D8               	btfsc	status,0,c
  1754  007AE8  EF78  F03D         	goto	u631
  1755  007AEC  EF7A  F03D         	goto	u630
  1756  007AF0                     u631:
  1757  007AF0  EF7C  F03D         	goto	l1105
  1758  007AF4                     u630:
  1759  007AF4  EF3F  F03D         	goto	l1085
  1760  007AF8                     l1105:
  1761  007AF8  90D8               	bcf	status,0,c
  1762  007AFA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1763  007AFC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1764  007AFE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1765  007B00  3201               	rrcf	___fltol@f1^0,f,c
  1766  007B02  3E0A               	incfsz	___fltol@exp1^0,f,c
  1767  007B04  EF7C  F03D         	goto	l1105
  1768  007B08  EF9E  F03D         	goto	l1119
  1769  007B0C                     l1109:
  1770  007B0C  0E1F               	movlw	31
  1771  007B0E  640A               	cpfsgt	___fltol@exp1^0,c
  1772  007B10  EF8C  F03D         	goto	u641
  1773  007B14  EF8E  F03D         	goto	u640
  1774  007B18                     u641:
  1775  007B18  EF96  F03D         	goto	l1117
  1776  007B1C                     u640:
  1777  007B1C  EF3F  F03D         	goto	l1085
  1778  007B20                     l1115:
  1779  007B20  90D8               	bcf	status,0,c
  1780  007B22  3601               	rlcf	___fltol@f1^0,f,c
  1781  007B24  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1782  007B26  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1783  007B28  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1784  007B2A  060A               	decf	___fltol@exp1^0,f,c
  1785  007B2C                     l1117:
  1786  007B2C  500A               	movf	___fltol@exp1^0,w,c
  1787  007B2E  A4D8               	btfss	status,2,c
  1788  007B30  EF9C  F03D         	goto	u651
  1789  007B34  EF9E  F03D         	goto	u650
  1790  007B38                     u651:
  1791  007B38  EF90  F03D         	goto	l1115
  1792  007B3C                     u650:
  1793  007B3C                     l1119:
  1794  007B3C  5009               	movf	___fltol@sign1^0,w,c
  1795  007B3E  B4D8               	btfsc	status,2,c
  1796  007B40  EFA4  F03D         	goto	u661
  1797  007B44  EFA6  F03D         	goto	u660
  1798  007B48                     u661:
  1799  007B48  EFAE  F03D         	goto	l1123
  1800  007B4C                     u660:
  1801  007B4C  1E04               	comf	(___fltol@f1+3)^0,f,c
  1802  007B4E  1E03               	comf	(___fltol@f1+2)^0,f,c
  1803  007B50  1E02               	comf	(___fltol@f1+1)^0,f,c
  1804  007B52  6C01               	negf	___fltol@f1^0,c
  1805  007B54  0E00               	movlw	0
  1806  007B56  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1807  007B58  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1808  007B5A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1809  007B5C                     l1123:
  1810  007B5C  C001  F001         	movff	___fltol@f1,?___fltol
  1811  007B60  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1812  007B64  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1813  007B68  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1814  007B6C                     l373:
  1815  007B6C  0012               	return		;funcret
  1816  007B6E                     __end_of___fltol:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function ___awdiv *****************
  1820 ;; Defined at:
  1821 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  dividend        2    0[COMRAM] int 
  1824 ;;  divisor         2    2[COMRAM] int 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  quotient        2    6[COMRAM] int 
  1827 ;;  sign            1    5[COMRAM] unsigned char 
  1828 ;;  counter         1    4[COMRAM] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2    0[COMRAM] int 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1838 ;;      Params:         4       0       0       0       0       0       0
  1839 ;;      Locals:         4       0       0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0
  1841 ;;      Totals:         8       0       0       0       0       0       0
  1842 ;;Total ram usage:        8 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_calculateTime
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text9
  1852  0079A4                     __ptext9:
  1853                           	callstack 0
  1854  0079A4                     ___awdiv:
  1855                           	callstack 28
  1856  0079A4  0E00               	movlw	0
  1857  0079A6  6E06               	movwf	___awdiv@sign^0,c
  1858  0079A8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1859  0079AA  EFDB  F03C         	goto	u540
  1860  0079AE  EFD9  F03C         	goto	u541
  1861  0079B2                     u541:
  1862  0079B2  EFE1  F03C         	goto	l1047
  1863  0079B6                     u540:
  1864  0079B6  6C03               	negf	___awdiv@divisor^0,c
  1865  0079B8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1866  0079BA  B0D8               	btfsc	status,0,c
  1867  0079BC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1868  0079BE  0E01               	movlw	1
  1869  0079C0  6E06               	movwf	___awdiv@sign^0,c
  1870  0079C2                     l1047:
  1871  0079C2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1872  0079C4  EFE8  F03C         	goto	u550
  1873  0079C8  EFE6  F03C         	goto	u551
  1874  0079CC                     u551:
  1875  0079CC  EFEE  F03C         	goto	l1053
  1876  0079D0                     u550:
  1877  0079D0  6C01               	negf	___awdiv@dividend^0,c
  1878  0079D2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1879  0079D4  B0D8               	btfsc	status,0,c
  1880  0079D6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1881  0079D8  0E01               	movlw	1
  1882  0079DA  1A06               	xorwf	___awdiv@sign^0,f,c
  1883  0079DC                     l1053:
  1884  0079DC  0E00               	movlw	0
  1885  0079DE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1886  0079E0  0E00               	movlw	0
  1887  0079E2  6E07               	movwf	___awdiv@quotient^0,c
  1888  0079E4  5003               	movf	___awdiv@divisor^0,w,c
  1889  0079E6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1890  0079E8  B4D8               	btfsc	status,2,c
  1891  0079EA  EFF9  F03C         	goto	u561
  1892  0079EE  EFFB  F03C         	goto	u560
  1893  0079F2                     u561:
  1894  0079F2  EF23  F03D         	goto	l1075
  1895  0079F6                     u560:
  1896  0079F6  0E01               	movlw	1
  1897  0079F8  6E05               	movwf	___awdiv@counter^0,c
  1898  0079FA  EF03  F03D         	goto	l1061
  1899  0079FE                     l1059:
  1900  0079FE  90D8               	bcf	status,0,c
  1901  007A00  3603               	rlcf	___awdiv@divisor^0,f,c
  1902  007A02  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1903  007A04  2A05               	incf	___awdiv@counter^0,f,c
  1904  007A06                     l1061:
  1905  007A06  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1906  007A08  EF08  F03D         	goto	u571
  1907  007A0C  EF0A  F03D         	goto	u570
  1908  007A10                     u571:
  1909  007A10  EFFF  F03C         	goto	l1059
  1910  007A14                     u570:
  1911  007A14                     l1063:
  1912  007A14  90D8               	bcf	status,0,c
  1913  007A16  3607               	rlcf	___awdiv@quotient^0,f,c
  1914  007A18  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1915  007A1A  5003               	movf	___awdiv@divisor^0,w,c
  1916  007A1C  5C01               	subwf	___awdiv@dividend^0,w,c
  1917  007A1E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1918  007A20  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1919  007A22  A0D8               	btfss	status,0,c
  1920  007A24  EF16  F03D         	goto	u581
  1921  007A28  EF18  F03D         	goto	u580
  1922  007A2C                     u581:
  1923  007A2C  EF1D  F03D         	goto	l1071
  1924  007A30                     u580:
  1925  007A30  5003               	movf	___awdiv@divisor^0,w,c
  1926  007A32  5E01               	subwf	___awdiv@dividend^0,f,c
  1927  007A34  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1928  007A36  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1929  007A38  8007               	bsf	___awdiv@quotient^0,0,c
  1930  007A3A                     l1071:
  1931  007A3A  90D8               	bcf	status,0,c
  1932  007A3C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1933  007A3E  3203               	rrcf	___awdiv@divisor^0,f,c
  1934  007A40  2E05               	decfsz	___awdiv@counter^0,f,c
  1935  007A42  EF0A  F03D         	goto	l1063
  1936  007A46                     l1075:
  1937  007A46  5006               	movf	___awdiv@sign^0,w,c
  1938  007A48  B4D8               	btfsc	status,2,c
  1939  007A4A  EF29  F03D         	goto	u591
  1940  007A4E  EF2B  F03D         	goto	u590
  1941  007A52                     u591:
  1942  007A52  EF2F  F03D         	goto	l1079
  1943  007A56                     u590:
  1944  007A56  6C07               	negf	___awdiv@quotient^0,c
  1945  007A58  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1946  007A5A  B0D8               	btfsc	status,0,c
  1947  007A5C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1948  007A5E                     l1079:
  1949  007A5E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1950  007A62  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1951  007A66  0012               	return		;funcret
  1952  007A68                     __end_of___awdiv:
  1953                           	callstack 0
  1954  0000                     
  1955                           	psect	rparam
  1956  0000                     
  1957                           	psect	idloc
  1958                           
  1959                           ;Config register IDLOC0 @ 0x200000
  1960                           ;	unspecified, using default values
  1961  200000                     	org	2097152
  1962  200000  FF                 	db	255
  1963                           
  1964                           ;Config register IDLOC1 @ 0x200001
  1965                           ;	unspecified, using default values
  1966  200001                     	org	2097153
  1967  200001  FF                 	db	255
  1968                           
  1969                           ;Config register IDLOC2 @ 0x200002
  1970                           ;	unspecified, using default values
  1971  200002                     	org	2097154
  1972  200002  FF                 	db	255
  1973                           
  1974                           ;Config register IDLOC3 @ 0x200003
  1975                           ;	unspecified, using default values
  1976  200003                     	org	2097155
  1977  200003  FF                 	db	255
  1978                           
  1979                           ;Config register IDLOC4 @ 0x200004
  1980                           ;	unspecified, using default values
  1981  200004                     	org	2097156
  1982  200004  FF                 	db	255
  1983                           
  1984                           ;Config register IDLOC5 @ 0x200005
  1985                           ;	unspecified, using default values
  1986  200005                     	org	2097157
  1987  200005  FF                 	db	255
  1988                           
  1989                           ;Config register IDLOC6 @ 0x200006
  1990                           ;	unspecified, using default values
  1991  200006                     	org	2097158
  1992  200006  FF                 	db	255
  1993                           
  1994                           ;Config register IDLOC7 @ 0x200007
  1995                           ;	unspecified, using default values
  1996  200007                     	org	2097159
  1997  200007  FF                 	db	255
  1998                           
  1999                           	psect	config
  2000                           
  2001                           ; Padding undefined space
  2002  300000                     	org	3145728
  2003  300000  FF                 	db	255
  2004                           
  2005                           ;Config register CONFIG1H @ 0x300001
  2006                           ;	Oscillator Selection bits
  2007                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2008                           ;	Fail-Safe Clock Monitor Enable bit
  2009                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2010                           ;	Internal/External Oscillator Switchover bit
  2011                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2012  300001                     	org	3145729
  2013  300001  06                 	db	6
  2014                           
  2015                           ;Config register CONFIG2L @ 0x300002
  2016                           ;	Power-up Timer Enable bit
  2017                           ;	PWRT = OFF, PWRT disabled
  2018                           ;	Brown-out Reset Enable bits
  2019                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2020                           ;	Brown Out Reset Voltage bits
  2021                           ;	BORV = 3, Minimum setting
  2022  300002                     	org	3145730
  2023  300002  19                 	db	25
  2024                           
  2025                           ;Config register CONFIG2H @ 0x300003
  2026                           ;	Watchdog Timer Enable bit
  2027                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2028                           ;	Watchdog Timer Postscale Select bits
  2029                           ;	WDTPS = 32768, 1:32768
  2030  300003                     	org	3145731
  2031  300003  1E                 	db	30
  2032                           
  2033                           ; Padding undefined space
  2034  300004                     	org	3145732
  2035  300004  FF                 	db	255
  2036                           
  2037                           ;Config register CONFIG3H @ 0x300005
  2038                           ;	CCP2 MUX bit
  2039                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2040                           ;	PORTB A/D Enable bit
  2041                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2042                           ;	Low-Power Timer1 Oscillator Enable bit
  2043                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2044                           ;	MCLR Pin Enable bit
  2045                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2046  300005                     	org	3145733
  2047  300005  81                 	db	129
  2048                           
  2049                           ;Config register CONFIG4L @ 0x300006
  2050                           ;	Stack Full/Underflow Reset Enable bit
  2051                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2052                           ;	Single-Supply ICSP Enable bit
  2053                           ;	LVP = ON, Single-Supply ICSP enabled
  2054                           ;	Extended Instruction Set Enable bit
  2055                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2056                           ;	Background Debugger Enable bit
  2057                           ;	DEBUG = 0x1, unprogrammed default
  2058  300006                     	org	3145734
  2059  300006  85                 	db	133
  2060                           
  2061                           ; Padding undefined space
  2062  300007                     	org	3145735
  2063  300007  FF                 	db	255
  2064                           
  2065                           ;Config register CONFIG5L @ 0x300008
  2066                           ;	Code Protection bit
  2067                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2068                           ;	Code Protection bit
  2069                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2070                           ;	Code Protection bit
  2071                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2072                           ;	Code Protection bit
  2073                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2074  300008                     	org	3145736
  2075  300008  0F                 	db	15
  2076                           
  2077                           ;Config register CONFIG5H @ 0x300009
  2078                           ;	Boot Block Code Protection bit
  2079                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2080                           ;	Data EEPROM Code Protection bit
  2081                           ;	CPD = OFF, Data EEPROM not code-protected
  2082  300009                     	org	3145737
  2083  300009  C0                 	db	192
  2084                           
  2085                           ;Config register CONFIG6L @ 0x30000A
  2086                           ;	Write Protection bit
  2087                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2088                           ;	Write Protection bit
  2089                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2090                           ;	Write Protection bit
  2091                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2092                           ;	Write Protection bit
  2093                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2094  30000A                     	org	3145738
  2095  30000A  0F                 	db	15
  2096                           
  2097                           ;Config register CONFIG6H @ 0x30000B
  2098                           ;	Configuration Register Write Protection bit
  2099                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2100                           ;	Boot Block Write Protection bit
  2101                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2102                           ;	Data EEPROM Write Protection bit
  2103                           ;	WRTD = OFF, Data EEPROM not write-protected
  2104  30000B                     	org	3145739
  2105  30000B  E0                 	db	224
  2106                           
  2107                           ;Config register CONFIG7L @ 0x30000C
  2108                           ;	Table Read Protection bit
  2109                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2110                           ;	Table Read Protection bit
  2111                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2112                           ;	Table Read Protection bit
  2113                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2114                           ;	Table Read Protection bit
  2115                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2116  30000C                     	org	3145740
  2117  30000C  0F                 	db	15
  2118                           
  2119                           ;Config register CONFIG7H @ 0x30000D
  2120                           ;	Boot Block Table Read Protection bit
  2121                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2122  30000D                     	org	3145741
  2123  30000D  40                 	db	64
  2124                           tosu	equ	0xFFF
  2125                           tosh	equ	0xFFE
  2126                           tosl	equ	0xFFD
  2127                           stkptr	equ	0xFFC
  2128                           pclatu	equ	0xFFB
  2129                           pclath	equ	0xFFA
  2130                           pcl	equ	0xFF9
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           indf0	equ	0xFEF
  2138                           postinc0	equ	0xFEE
  2139                           postdec0	equ	0xFED
  2140                           preinc0	equ	0xFEC
  2141                           plusw0	equ	0xFEB
  2142                           fsr0h	equ	0xFEA
  2143                           fsr0l	equ	0xFE9
  2144                           wreg	equ	0xFE8
  2145                           indf1	equ	0xFE7
  2146                           postinc1	equ	0xFE6
  2147                           postdec1	equ	0xFE5
  2148                           preinc1	equ	0xFE4
  2149                           plusw1	equ	0xFE3
  2150                           fsr1h	equ	0xFE2
  2151                           fsr1l	equ	0xFE1
  2152                           bsr	equ	0xFE0
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           preinc2	equ	0xFDC
  2157                           plusw2	equ	0xFDB
  2158                           fsr2h	equ	0xFDA
  2159                           fsr2l	equ	0xFD9
  2160                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        200
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      55
    BANK0           128      0      96
    BANK1           256    210     210
    BANK2           256      0     104
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_playTone
    _playMelody->_playTone
    _rand->___lmul
    _playTone->_calculateTime
    _calculateTime->___xxtofl
    ___xxtofl->___lmul
    ___lmul->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_playMelody

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8757
                         _playMelody
                           _playTone
 ---------------------------------------------------------------------------------
 (1) _playMelody                                         210   210      0    4930
                                              0 BANK1    210   210      0
                           _delay_ms
                           _playTone
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     522
                                             20 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _playTone                                             7     5      2    3827
                                             44 COMRAM     7     5      2
                      _calculateTime
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calculateTime                                       10     8      2    1996
                                             34 COMRAM    10     8      2
                            ___awdiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                             20 COMRAM    14    10      4
                            ___awdiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     522
                                              8 COMRAM    12     4      8
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _playMelody
     _delay_ms
     _playTone
       _calculateTime
         ___awdiv
         ___fltol
         ___lmul
           ___awdiv (ARG)
         ___xxtofl
           ___awdiv (ARG)
           ___lmul (ARG)
       _delay_ms
     _rand
       ___lmul
   _playTone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      68       9       40.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D2      D2       7       82.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      60       5       75.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      37       1       43.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D1      15        0.0%
DATA                 0      0     1D1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 05 16:15:51 2021

                     l21 79A2                       l31 7724                       l24 7696  
                     l33 7762                       l27 76B4                       l53 7E42  
                     l48 7C86                       l87 7884                       l88 7894  
           ___awdiv@sign 0006                      l307 7A66                      l373 7B6C  
                    l731 7CDE                      l734 7E3A                      l745 7DD2  
                    l738 7D76                      l755 7900                      u600 7A7E  
                    u520 784A                      u601 7A7A                      u521 7846  
                    u610 7AB2                      u530 7884                      u531 7880  
                    u540 79B6                      u620 7AE0                      u700 7D5A  
                    u541 79B2                      u621 7ADC                      u701 7D56  
                    u550 79D0                      u630 7AF4                      u710 7DA4  
                    u551 79CC                      u631 7AF0                      u615 7AA8  
                    u711 7DA0                      u560 79F6                      u640 7B1C  
                    u720 7DC2                      u561 79F2                      u641 7B18  
                    u721 7DBE                      u801 7B92                      u570 7A14  
                    u650 7B3C                      u730 7DD2                      u571 7A10  
                    u651 7B38                      u731 7DCE                      u811 7BA4  
                    u580 7A30                      u660 7B4C                      u740 7DE0  
                    u820 7BBE                      u900 7EBC                      u581 7A2C  
                    u661 7B48                      u741 7DDC                      u821 7BBA  
                    u901 7EB8                      u590 7A56                      u750 7E1A  
                    u670 7C9A                      u830 7C18                      u910 7ED6  
                    u591 7A52                      u751 7E16                      u671 7C96  
                    u831 7C14                      u911 7ED2                      u760 7E28  
                    u680 7CA8                      u840 7C2C                      u920 7EF0  
                    u761 7E24                      u681 7CA4                      u841 7C28  
                    u921 7EEC                      u690 7D04                      u770 76B4  
                    u850 7C86                      u930 7F0A                      u691 7D00  
                    u771 76B0                      u851 7C82                      u931 7F06  
                    u780 7762                      u940 7F24                      u860 7E54  
                    u781 775E                      u941 7F20                      u861 7E50  
                    u790 78F2                      u950 7F3E                      u870 7E6E  
                    u951 7F3A                      u871 7E6A                      u960 7F58  
                    u880 7E88                      u961 7F54                      u881 7E84  
                    u970 7F72                      u890 7EA2                      u795 78E8  
                    u971 7F6E                      u891 7E9E                      u980 7F8C  
                    u981 7F88                      u990 7FA6                      u991 7FA2  
                    wreg 000FE8             ___fltol@exp1 000A                     l1031 783C  
                   l1041 79A8                     l1121 7B4C                     l1105 7AF8  
                   l1033 784A                     l1051 79D8                     l1043 79B6  
                   l1123 7B5C                     l1115 7B20                     l1107 7B02  
                   l1035 785A                     l1131 7CA8                     l1211 7BBE  
                   l1203 7B6E                     l1061 7A06                     l1053 79DC  
                   l1045 79BE                     l1117 7B2C                     l1109 7B0C  
                   l1037 7864                     l1029 782C                     l1141 7D20  
                   l1133 7CEE                     l1213 7BD2                     l1221 7C18  
                   l1205 7B88                     l1071 7A3A                     l1063 7A14  
                   l1055 79E4                     l1047 79C2                     l1039 79A4  
                   l1119 7B3C                     l1151 7DA8                     l1143 7D2C  
                   l1135 7D04                     l1127 7C8A                     l1231 7C70  
                   l1223 7C2C                     l1215 7BF0                     l1207 7B9A  
                   l1073 7A40                     l1065 7A1A                     l1057 79F6  
                   l1049 79D0                     l1161 7DE6                     l1153 7DB4  
                   l1145 7D5E                     l1129 7C9A                     l1225 7C40  
                   l1217 7BFC                     l1209 7BAC                     l1241 7E7A  
                   l1233 7E3C                     l1067 7A30                     l1059 79FE  
                   l1075 7A46                     l1091 7ABC                     l1083 7A68  
                   l1163 7E0A                     l1155 7DC2                     l1147 7D60  
                   l1139 7D18                     l1227 7C5E                     l1219 7C02  
                   l1251 7EBC                     l1243 7E88                     l1235 7E54  
                   l1077 7A56                     l1069 7A38                     l1093 7ABE  
                   l1085 7A7E                     l1165 7E1A                     l1157 7DE0  
                   l1149 7D6C                     l1173 7902                     l1181 768A  
                   l1229 7C6A                     l1261 7EFC                     l1253 7EC8  
                   l1245 7E94                     l1237 7E60                     l1079 7A5E  
                   l1095 7ACE                     l1167 7E28                     l1159 7DE2  
                   l1175 799A                     l1183 7692                     l1191 7732  
                   l1271 7F3E                     l1263 7F0A                     l1255 7ED6  
                   l1247 7EA2                     l1239 7E6E                     l1097 7AD2  
                   l1089 7A92                     l1169 7E2A                     l1193 7740  
                   l1185 7704                     l1281 7F7E                     l1273 7F4A  
                   l1265 7F16                     l1257 7EE2                     l1249 7EAE  
                   l1099 7AE0                     l1179 767E                     l1195 7744  
                   l1187 7718                     l1291 7FC0                     l1283 7F8C  
                   l1275 7F58                     l1267 7F24                     l1259 7EF0  
                   l1189 7726                     l1197 7896                     l1293 7FCC  
                   l1285 7F98                     l1277 7F64                     l1269 7F30  
                   l1199 78D2                     l1295 7FDA                     l1287 7FA6  
                   l1279 7F72                     l1297 7FE6                     l1289 7FB2  
                   l1299 7FF4                     u1000 7FC0                     u1001 7FBC  
                   u1010 7FDA                     u1011 7FD6                     u1020 7FF4  
                   u1021 7FF0                     u1037 768C                     _main 7E3C  
                   _rand 7896                     _seed 0034                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000            ___fltol@sign1 0009                    ?_main 0001  
                  ?_rand 0015          __end_of___awdiv 7A68          __end_of___fltol 7B6E  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _TRISA 000F92  
                  _TRISB 000F93      ___lmul@multiplicand 000D                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
        __initialization 76B6             __end_of_main 8000             __end_of_rand 7902  
                 ??_main 0034                   ??_rand 0017            __activetblptr 000000  
       ___awdiv@dividend 0001         __end_of___xxtofl 7E3C         __end_of_delay_ms 76B6  
                 ___lmul 782C                ??___awdiv 0005                ??___fltol 0005  
       ___awdiv@quotient 0007                   isa$std 000001         __end_of_playTone 7764  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ___xxtofl@arg 001F             ___xxtofl@exp 001E             ___xxtofl@val 0015  
             __accesstop 0080  __end_of__initialization 76FE            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001             __pidataBANK0 7764  
           __pidataBANK2 77C4              playMelody@m 01CE              playMelody@n 01C8  
                ?___lmul 0009           ___lmul@product 0011          playMelody@F2541 0080  
        playMelody@F2539 0200   __size_of_calculateTime 00A2                ?___xxtofl 0015  
              ?_delay_ms 0001           calculateTime@n 0025           calculateTime@x 0029  
        playMelody@m_366 01D0          playMelody@n_365 01CA                ?_playTone 002D  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 79A4  
        __size_of___lmul 006A                  ___fltol 7A68                  __pcinit 76B6  
                __ramtop 0600                  __ptext0 7E3C                  __ptext1 7B6E  
                __ptext2 7896                  __ptext3 7704                  __ptext4 767E  
                __ptext5 7902                  __ptext6 7C88                  __ptext7 782C  
                __ptext8 7A68                  __ptext9 79A4               ??___xxtofl 0019  
             ??_delay_ms 0003               _playMelody 7B6E     end_of_initialization 76FE  
          _calculateTime 7902               ??_playTone 002F                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTAbits 000F80                _PORTBbits 000F81                _PORTCbits 000F82  
          ___xxtofl@sign 001D                _TRISCbits 000F94        playMelody@melody1 0100  
      playMelody@melody2 0168           ?_calculateTime 0023           __end_of___lmul 7896  
    start_initialization 76B6              ?_playMelody 0001                 ??___lmul 0011  
            __pdataBANK0 0080              __pdataBANK2 0200       _calculateTime$1018 002B  
            __pbssCOMRAM 0034            __pcstackBANK1 0100        __size_of___xxtofl 01B4  
      __size_of_delay_ms 0038          ??_calculateTime 0025        __size_of_playTone 0060  
               ?___awdiv 0001                 ?___fltol 0001      __size_of_playMelody 011A  
           playTone@note 002D             playTone@time 0032                delay_ms@j 0004  
       playMelody@random 01CC        ___lmul@multiplier 0009             delay_ms@time 0001  
              copy_data0 76CA                copy_data1 76EA                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00C4         __size_of___fltol 0106  
               ___xxtofl 7C88                 _delay_ms 767E                playTone@i 0030  
           ??_playMelody 0034            __size_of_main 01C4            __size_of_rand 006C  
               _playTone 7704                 isa$xinst 000000       __end_of_playMelody 7C88  
      calculateTime@note 0023    __end_of_calculateTime 79A4  
